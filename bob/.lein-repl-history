(last "")
(= (last "String") g)
(= (last "String") "g")
(= (last "String") "/g")
(= (last "String") "\g")
(last "String)
"
)
(last "String")
\g
/g
(= (last "String") \g)
\?
(= (capitalize "STRING") "STRING")
string/capitalize
(require 'clojure.string')
(require 'clojure.string)
string/capitalize
clojure.string/capitalize
(= (clojure.string/capitalize "STRING") "STRING)
"
)
(= (clojure.string/capitalize "STRING") "STRING")
(clojure.string/capitalize "STRING")
(= (clojure.string/upper-case "STRING") "STRING")
(re-matches #"\s$" "    ")
(re-matches #"\s$" "")
(re-matches #"ˆ\s$" "")
(re-matches #"ˆ\s$" "  ")
(re-matches #"ˆ\s+$" "  ")
(re-matches #"\s+$" "  ")
(re-matches #"\s*$" "  ")
(re-matches #"\s*$" "")
(re-matches #"\s*$" "    ")
(re-matches #"\s*$" "dasdas")
(re-matches #"\s*$" "")
(re-matches #"\n*$" "")
(re-matches #"\n*$" "123")
(re-matches #"[0-9]*$" "123")
(re-matches #"[0-9]*$" "asdasd123")
(re-matches #"*[0-9]*$" "asdasd123")
(re-matches #"[0-9]*$" "asdasd123")
(re-matches #"[0-9]*$" "123")
(re-matches #"[0-9]*$" "123asdads")
(re-matches #"[0-9].*$" "123")
(re-matches #"[0-9].*$" "123asd")
(re-matches #"[0-9].*$" "asda123asd")
(re-matches #"[0-9].*$" "123asd")
(re-matches #"[0-9].*$" "123")
(re-matches #"[0-9]$" "123")
(re-matches #"[0-9]*$" "123")
(re-matches #"[0-9]*$" "123das")
(re-matches #"[0-9]*$" "asda123")
(re-matches #"\a*$" "asda123")
(:require bob)
(load-file "bob.clj")
(load-file "./bob.clj")
(load-file "bob.clj")
(load-file "src/bob.clj")
response-for
bob/response-for
bob/is-blank?
(bob/is-question? "1, 2, 3 GO!")
(bob/is-shout? "1, 2, 3 GO!")
(bob/is-question? "1, 2, 3 GO?")
(load-file "src/bob.clj")
(bob/response-for "WHAT THE HELL WERE YOU THINKING?")
